# flake8: noqa
dev:
  vpc:
    CIDR: 10.0.0.0/16
    SubnetA: 10.0.0.0/20
    SubnetB: 10.0.16.0/20
    SubnetC: 10.0.32.0/20
  ec2:
    auto_scaling:
      desired: 1
      max: 3
      min: 0
    tags:
      Role: docker
      Apps: test
    hostname_pattern: '{instance_id}.{tags[Role]}.{environment}.{application}'
    cloud_config:
      manage_etc_hosts: true
    parameters:
      KeyName: default
      InstanceType: t2.micro
    block_devices:
      - DeviceName: /dev/sda1
        VolumeSize: 10
      - DeviceName: /dev/sdf
        VolumeSize: 10
    security_groups:
      BaseSG:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        # Allow the ELB defined below test-dev-external
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: { Ref: DefaultSGtestdevexternal }
        # Allow all other members of the BaseSG to speak to us on 4505 and 4506
        - IpProtocol: tcp
          FromPort: 4505
          ToPort: 4506
          SourceSecurityGroupId: { Ref: BaseSG }
  elb:
    - name: test-dev-external
      hosted_zone: integration.dsd.io.
      scheme: internet-facing
      health_check:
        HealthyThreshold: 5
        Interval: 10
        Target: HTTP:80/ping.json
        Timeout: 5
        UnhealthyThreshold: 2
      listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: TCP
        - LoadBalancerPort: 443
          InstancePort: 443
          Protocol: TCP
    # This ELB defines a set of custom policies to apply
    - name: test-custom-policies
      hosted_zone: integration.dsd.io.
      scheme: internet-facing
      # We define our policies in a list. Each policy has a name and a type,
      # with a set of attributes in a list of 'attrubute_name': "attribute_value' pairs.
      policies:
        - name: EnableProxyProtocol
          type: ProxyProtocolPolicyType
          attributes:
            - ProxyProtocol: True
           # We can optionally define the instance or load_balancer ports
           # to here that the policy will be applied on
           #instance_ports:
           #  - 80
           #  - 443
           #load_balancer_ports:
           #  - 80
           #  - 443

      listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: TCP
  s3:
    static-bucket-name: moj-test-dev-static-integration
  rds:
    storage: 5
    storage-type: gp2
    backup-retention-period: 1
    db-name: test
    db-master-username: testuser
    instance-class: db.t2.micro
    multi-az: false
    db-engine: postgres
    db-engine-version: 9.5.4
#  ssl:
#    my-cert:
#      cert: |
#        -----BEGIN CERTIFICATE-----
#        blahblahblah
#        -----END CERTIFICATE-----
#      key: |
#        -----BEGIN RSA PRIVATE KEY-----
#        blahblahblah
#        -----END RSA PRIVATE KEY-----
#      chain: |
#        -----BEGIN CERTIFICATE-----
#        blahblahblah
#        -----END CERTIFICATE-----
